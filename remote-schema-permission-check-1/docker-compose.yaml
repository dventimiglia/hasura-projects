version: "3.6"
services:
  postgres:
    image: postgres:16
    ports:
      - "${PGPORT}:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - "./initdb.d-postgres:/docker-entrypoint-initdb.d:ro"
    healthcheck:
      test: psql -d graphql_engine_2 -U postgres -c 'select 1' || exit 1
  graphql-engine-1:
    image: hasura/graphql-engine:v2.37.0.cli-migrations-v3
    ports:
      - "${HGEPORT1}:8080"
    restart: always
    environment:
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres:5432/graphql_engine_1
      PG_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
    volumes:
      - "./graphql-engine-1/metadata:/hasura-metadata:ro"
    depends_on:
       postgres:
         condition: service_healthy
  graphql-engine-2:
    image: hasura/graphql-engine:v2.37.0.cli-migrations-v3
    ports:
      - "${HGEPORT2}:8080"
    restart: always
    environment:
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres:5432/graphql_engine_2
      PG_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
    volumes:
      - "./graphql-engine-2/metadata:/hasura-metadata:ro"
    depends_on:
       postgres:
         condition: service_healthy
  graphql-engine-3:
    image: hasura/graphql-engine:v2.37.0.cli-migrations-v3
    ports:
      - "${HGEPORT3}:8080"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/graphql_engine_3
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
    volumes:
      - "./graphql-engine-3/metadata:/hasura-metadata:ro"
    depends_on:
       postgres:
         condition: service_healthy
