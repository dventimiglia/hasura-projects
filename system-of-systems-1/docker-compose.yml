version: "3.7"
services:
  postgres:
    image: postgres:16
    ports:
      - ${PGPORT}:5432
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./initdb.d-postgres:/docker-entrypoint-initdb.d:ro
      - ./initdb.d-files:/opt
  mongodb:
    image: mongo:6
    restart: always
    ports:
      - ${MONGODBPORT}:27017
    environment:
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_ROOT_USERNAME: mongo
    volumes:
      - ./initdb.d-mongodb:/docker-entrypoint-initdb.d:ro
  hasura:
    image: hasura/graphql-engine:v2.38.0.cli-migrations-v3
    depends_on:
      - postgres
      - mongo-data-connector
    restart: always
    ports:
      - ${HGEPORT}:8080
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres/postgres
      HASURA_GRAPHQL_DEV_MODE: true
      HASURA_GRAPHQL_EE_LICENSE_KEY: ${HASURA_GRAPHQL_EE_LICENSE_KEY}
      HASURA_GRAPHQL_ENABLE_CONSOLE: true
      HASURA_GRAPHQL_MAX_CACHE_SIZE: 200
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"Mongo":{"uri":"http://mongo-data-connector:3000"}}}}'
    volumes:
      - ./metadata:/hasura-metadata:ro
  mongo-data-connector:
    image: hasura/mongo-data-connector:v2.38.0
    depends_on:
      - mongodb
    restart: always
    ports:
      - 3001:3000
