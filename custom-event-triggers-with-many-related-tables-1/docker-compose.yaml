services:
  postgres:
    image: postgres:16
    restart: always
    ports:
      - ${PGPORT:-5433}:5432
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./initdb.d-postgres:/docker-entrypoint-initdb.d:ro
    command: postgres -c 'wal_level=logical'
  graphql-engine:
    image: hasura/graphql-engine:v2.42.0.cli-migrations-v3
    ports:
      - ${HGEPORT:-8081}:8080
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      HASURA_GRAPHQL_DEV_MODE: true
      HASURA_GRAPHQL_ENABLE_CONSOLE: true
    volumes:
      - ./metadata:/hasura-metadata:ro
  solr:
    image: solr
    ports:
      - ${SOLRPORT:-8983}:8983
    volumes:
      - ./initdb.d-solr:/docker-entrypoint-initdb.d:ro
    command: /docker-entrypoint-initdb.d/init.bash
  webhook-postgres:
    build: .
    restart: always
    ports:
      - ${PGPORT2:-5434}:5432
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./initdb.d-webhook-postgres:/docker-entrypoint-initdb.d:ro
  webhook-postgrest:
    image: postgrest/postgrest
    ports:
      - ${PGRST_SERVER_PORT:-3001}:3000
      - ${PGRST_ADMIN_SERVER_PORT:-4001}:4000
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@webhook-postgres:5432/postgres
      PGRST_DB_ANON_ROLE: postgres
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
      PGRST_ADMIN_SERVER_PORT: 4000
    depends_on:
      - webhook-postgres
